(()=>{"use strict";const e={enabled:!0,whitelist:[],pausedDomains:[],tier:{level:1,name:"Basic",unlockedAt:Date.now(),progress:0},notifications:!0,showBadge:!0,autoUpdate:!0,developerMode:!1},t={totalBlocked:0,blockedToday:0,blockedThisWeek:0,blockedThisMonth:0,lastReset:Date.now(),domainStats:{},categoryStats:{ads:0,trackers:0,malware:0,social:0,youtube:0,other:0}};class n{static instance;constructor(){}static getInstance(){return n.instance||(n.instance=new n),n.instance}async getSettings(){try{return(await chrome.storage.local.get("settings")).settings||e}catch(t){return e}}async setSettings(e){try{const t={...await this.getSettings(),...e};await chrome.storage.local.set({settings:t})}catch(e){}}async updateSettings(e){return this.setSettings(e)}async getStats(){try{return(await chrome.storage.local.get("stats")).stats||t}catch(e){return t}}async updateStats(e){try{const t={...await this.getStats(),...e};await chrome.storage.local.set({stats:t})}catch(e){}}async incrementBlockedCount(e,t="ads"){try{const n=await this.getStats(),a=(new Date).setHours(0,0,0,0);n.lastReset<a&&(n.blockedToday=0,n.lastReset=a),n.totalBlocked++,n.blockedToday++,n.domainStats[e]=(n.domainStats[e]||0)+1,n.categoryStats[t]++,await this.updateStats(n)}catch(e){}}async addToWhitelist(e){try{const t=await this.getSettings();t.whitelist.includes(e)||(t.whitelist.push(e),await this.setSettings({whitelist:t.whitelist}))}catch(e){}}async removeFromWhitelist(e){try{const t=await this.getSettings();t.whitelist=t.whitelist.filter(t=>t!==e),await this.setSettings({whitelist:t.whitelist})}catch(e){}}async isWhitelisted(e){try{return(await this.getSettings()).whitelist.some(t=>e===t||e.endsWith(`.${t}`))}catch(e){return!1}}async toggleExtension(){try{const e=!(await this.getSettings()).enabled;return await this.setSettings({enabled:e}),e}catch(e){return!0}}async clearStats(){try{await chrome.storage.local.set({stats:t})}catch(e){}}}n.getInstance();class a{storage=n.getInstance();observer=null;adSkipTimer=null;isEnabled=!1;adSelectors={videoAds:[".video-ads",".ytp-ad-module",".ytp-ad-overlay-container",".ytp-ad-player-overlay","ytd-player-legacy-desktop-watch-ads-renderer","ytd-action-companion-ad-renderer","ytd-display-ad-renderer","ytd-video-masthead-ad-advertiser-info-renderer","ytd-video-masthead-ad-primary-video-renderer","ytd-in-feed-ad-layout-renderer","ytd-ad-slot-renderer","ytd-banner-promo-renderer","ytd-statement-banner-renderer","ytd-masthead-ad-v3-renderer","ytd-primetime-promo-renderer"],sidebarAds:["ytd-companion-slot-renderer","ytd-promoted-video-renderer","ytd-compact-promoted-video-renderer","#player-ads","#masthead-ad","#homepage-chrome-side-promo","#watch-channel-brand-div","#watch7-sidebar-ads"],feedAds:["ytd-rich-item-renderer:has(ytd-display-ad-renderer)","ytd-rich-item-renderer:has(ytd-in-feed-ad-layout-renderer)","ytd-rich-section-renderer:has(ytd-statement-banner-renderer)","ytd-feed-nudge-renderer","ytm-promoted-sparkles-web-renderer"],overlayAds:[".ytp-ad-overlay-slot",".ytp-ad-overlay-container",".ytp-ad-overlay-close-button",".ytp-ad-overlay-image",".ytp-ad-text-overlay","tp-yt-paper-dialog:has(ytd-mealbar-promo-renderer)","yt-mealbar-promo-renderer","ytd-popup-container"]};async init(){const e=await this.storage.getSettings();e.tier.level>=2&&e.enabled&&(this.isEnabled=!0,this.startBlocking()),chrome.runtime.onMessage.addListener(e=>{"settingsUpdated"===e.action&&(e.settings.tier.level>=2&&e.settings.enabled?this.isEnabled||(this.isEnabled=!0,this.startBlocking()):(this.isEnabled=!1,this.stopBlocking()))})}startBlocking(){this.removeAds(),this.skipVideoAds(),this.blockAdRequests(),this.observer=new MutationObserver(()=>{this.removeAds(),this.skipVideoAds()}),this.observer.observe(document.body,{childList:!0,subtree:!0}),this.adSkipTimer=setInterval(()=>{this.skipVideoAds(),this.removeAds()},1e3),this.injectCSS(),this.overrideYouTubeFunctions()}stopBlocking(){this.observer&&(this.observer.disconnect(),this.observer=null),this.adSkipTimer&&(clearInterval(this.adSkipTimer),this.adSkipTimer=null)}removeAds(){Object.values(this.adSelectors).flat().forEach(e=>{document.querySelectorAll(e).forEach(e=>{e&&(e.remove(),chrome.runtime.sendMessage({action:"adBlocked",category:"youtube",domain:"youtube.com"}))})});['[class*="ad-"]','[class*="ads-"]','[class*="promoted"]','[class*="sponsor"]','[id*="ad-"]','[id*="ads-"]'].forEach(e=>{document.querySelectorAll(e).forEach(e=>{const t=e.className.toString().toLowerCase(),n=e.id.toLowerCase();!(t.includes("ad-")||t.includes("ads-")||t.includes("promoted")||t.includes("sponsor")||n.includes("ad-")||n.includes("ads-"))||t.includes("load")||t.includes("add")||e.remove()})})}skipVideoAds(){const e=document.querySelector("video"),t=document.querySelector(".ytp-ad-player-overlay"),n=document.querySelector(".ytp-ad-skip-button, .ytp-ad-skip-button-modern"),a=document.querySelector(".ytp-ad-text");(t||a)&&(n?(n.click(),chrome.runtime.sendMessage({action:"adBlocked",category:"youtube",domain:"youtube.com"})):e&&(e.duration&&isFinite(e.duration)&&(e.currentTime=e.duration),e.muted=!0,e.playbackRate=16));const r=Array.from(document.querySelectorAll("*")).find(e=>"Skip Ad"===e.textContent?.trim()||"Skip Ads"===e.textContent?.trim());r&&r.click()}blockAdRequests(){const e=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(t,n,...a){if(!["/api/stats/ads","/api/stats/qoe","/pagead/","/ptracking","/get_midroll_","/youtubei/v1/log_event","/csi_204","/generate_204"].some(e=>n.includes(e)))return e.apply(this,[t,n,...a]);chrome.runtime.sendMessage({action:"adBlocked",category:"youtube",domain:"youtube.com"})};const t=window.fetch;window.fetch=function(e,n){const a="string"==typeof e?e:e.toString();return["/api/stats/ads","/api/stats/qoe","/pagead/","/ptracking","/get_midroll_","/youtubei/v1/log_event"].some(e=>a.includes(e))?(chrome.runtime.sendMessage({action:"adBlocked",category:"youtube",domain:"youtube.com"}),Promise.reject(new Error("Blocked by ShieldPro"))):t.apply(this,[e,n])}}injectCSS(){const e=document.createElement("style");e.textContent='\n      /* Hide all YouTube ads */\n      .video-ads,\n      .ytp-ad-module,\n      .ytp-ad-overlay-container,\n      .ytp-ad-player-overlay,\n      ytd-player-legacy-desktop-watch-ads-renderer,\n      ytd-action-companion-ad-renderer,\n      ytd-display-ad-renderer,\n      ytd-video-masthead-ad-advertiser-info-renderer,\n      ytd-video-masthead-ad-primary-video-renderer,\n      ytd-in-feed-ad-layout-renderer,\n      ytd-ad-slot-renderer,\n      ytd-banner-promo-renderer,\n      ytd-statement-banner-renderer,\n      ytd-masthead-ad-v3-renderer,\n      ytd-primetime-promo-renderer,\n      ytd-companion-slot-renderer,\n      ytd-promoted-video-renderer,\n      ytd-compact-promoted-video-renderer,\n      #player-ads,\n      #masthead-ad,\n      #homepage-chrome-side-promo,\n      #watch-channel-brand-div,\n      #watch7-sidebar-ads,\n      .ytp-ad-overlay-slot,\n      .ytp-ad-overlay-image,\n      .ytp-ad-text-overlay,\n      ytd-mealbar-promo-renderer,\n      yt-mealbar-promo-renderer,\n      ytd-popup-container:has(ytd-mealbar-promo-renderer),\n      tp-yt-paper-dialog:has(ytd-mealbar-promo-renderer),\n      ytd-feed-nudge-renderer,\n      ytm-promoted-sparkles-web-renderer,\n      ytd-rich-item-renderer:has(ytd-display-ad-renderer),\n      ytd-rich-item-renderer:has(ytd-in-feed-ad-layout-renderer),\n      ytd-rich-section-renderer:has(ytd-statement-banner-renderer) {\n        display: none !important;\n        visibility: hidden !important;\n        height: 0 !important;\n        width: 0 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n      }\n\n      /* Remove ad placeholders */\n      .ytp-ad-preview-container,\n      .ytp-ad-message-container {\n        display: none !important;\n      }\n\n      /* Hide "Ad" badges */\n      .ytp-ad-badge,\n      .ytp-ad-badge-container {\n        display: none !important;\n      }\n\n      /* Hide ad duration and skip button area when no ad */\n      .ytp-ad-duration-remaining,\n      .ytp-ad-skip-button-container:empty {\n        display: none !important;\n      }\n\n      /* Clean up empty spaces left by ads */\n      ytd-rich-grid-renderer #contents:has(ytd-ad-slot-renderer) {\n        gap: 0 !important;\n      }\n    ',document.head.appendChild(e)}overrideYouTubeFunctions(){const e=document.createElement("script");e.textContent="\n      (function() {\n        // Block YouTube's ad-related objects\n        if (window.ytInitialPlayerResponse && window.ytInitialPlayerResponse.adPlacements) {\n          delete window.ytInitialPlayerResponse.adPlacements;\n        }\n\n        // Override ad-related properties\n        Object.defineProperty(window, 'ytInitialPlayerResponse', {\n          get: function() {\n            return this._ytInitialPlayerResponse;\n          },\n          set: function(value) {\n            if (value && value.adPlacements) {\n              delete value.adPlacements;\n            }\n            if (value && value.playerAds) {\n              delete value.playerAds;\n            }\n            this._ytInitialPlayerResponse = value;\n          }\n        });\n\n        // Remove ads from player config\n        const originalPlayerConfig = window.ytplayer?.config;\n        if (originalPlayerConfig) {\n          if (originalPlayerConfig.args?.ad3_module) {\n            delete originalPlayerConfig.args.ad3_module;\n          }\n          if (originalPlayerConfig.args?.ad_device) {\n            delete originalPlayerConfig.args.ad_device;\n          }\n          if (originalPlayerConfig.args?.ad_flags) {\n            delete originalPlayerConfig.args.ad_flags;\n          }\n          if (originalPlayerConfig.args?.ad_logging_flag) {\n            delete originalPlayerConfig.args.ad_logging_flag;\n          }\n          if (originalPlayerConfig.args?.ad_preroll) {\n            delete originalPlayerConfig.args.ad_preroll;\n          }\n          if (originalPlayerConfig.args?.ad_tag) {\n            delete originalPlayerConfig.args.ad_tag;\n          }\n        }\n\n        // Block YouTube ad-related API calls\n        const originalSetTimeout = window.setTimeout;\n        window.setTimeout = function(func, delay, ...args) {\n          const funcString = func.toString();\n          if (funcString.includes('ad') || funcString.includes('Ad') || funcString.includes('AD')) {\n            return -1; // Return invalid timer ID\n          }\n          return originalSetTimeout.apply(this, [func, delay, ...args]);\n        };\n      })();\n    ",document.documentElement.appendChild(e),e.remove()}}if("loading"===document.readyState)document.addEventListener("DOMContentLoaded",()=>{(new a).init()});else{(new a).init()}})();
//# sourceMappingURL=youtube-blocker.js.map